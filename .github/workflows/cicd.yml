name: CI/CD
on:
  push:
    branches: [main]
  pull_request:
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    

    
    services:
      postgres:
        image: postgres:17
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: azertyuiop
          POSTGRES_DB: collabdb
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: get the code
        uses: actions/checkout@v3

      - name: set up db schema
        run: |
          PGPASSWORD=azertyuiop psql -h localhost -U postgres -d collabdb -c "
              CREATE TABLE IF NOT EXISTS users (
                id SERIAL PRIMARY KEY,
                username VARCHAR(100) NOT NULL UNIQUE,
                email VARCHAR(255) NOT NULL UNIQUE,
                password TEXT NOT NULL,
                created_at TIMESTAMP DEFAULT now()
              );

              CREATE TABLE IF NOT EXISTS documents (
                id SERIAL PRIMARY KEY,
                title TEXT NOT NULL,
                created_at TIMESTAMP DEFAULT now(),
                owner_id INTEGER NOT NULL,
                updated_at TIMESTAMP DEFAULT now(),
                content JSONB DEFAULT '{}'::jsonb,
                CONSTRAINT documents_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES users(id)
              );

              CREATE TABLE IF NOT EXISTS document_users (
                doc_id INTEGER NOT NULL,
                user_id INTEGER NOT NULL,
                role TEXT NOT NULL,
                PRIMARY KEY (user_id, doc_id),
                CONSTRAINT document_users_doc_id_fkey FOREIGN KEY (doc_id) REFERENCES documents(id),
                CONSTRAINT document_users_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)
              );
            "


      - name: login to ghcr
        run: echo ${{secrets.GHCR_PAT}} | docker login ghcr.io -u ahmoued --password-stdin

      - name: build backend dev docker image and run tests
        run: |
          docker build --target dev -t ghcr.io/ahmoued/collab-backend:latest ./backend
          docker run --rm \
          --network host \
          -e DATABASE_HOST=localhost \
          -e DATABASE_PORT=5432 \
          -e DATABASE_USERNAME=${{secrets.POSTGRES_USER}} \
          -e DATABASE_PASSWORD=azertyuiop \
          -e DATABASE_NAME=${{secrets.POSTGRES_DB}} \
          ghcr.io/ahmoued/collab-backend:latest npm test

      - name: build and push backend production docker image
        if: github.ref == 'refs/heads/main'
        run: | 
          docker build --target prod -t ghcr.io/ahmoued/collab-backend:latest ./backend
          docker push ghcr.io/ahmoued/collab-backend:latest

      - name: build frontend docker image
        run: docker build -t ghcr.io/ahmoued/collab-frontend:latest ./frontend

      - name: push frontend docker image
        run: docker push ghcr.io/ahmoued/collab-frontend:latest